cmake_minimum_required(VERSION 3.3 FATAL_ERROR)

project(main CXX)

include(${CMAKE_SOURCE_DIR}/cmake/clang-dev-tools.cmake)

file(GLOB CC_FILES *.cc)

find_package(Threads REQUIRED)

add_library(icu4c_i18n STATIC IMPORTED)
set_target_properties(icu4c_i18n PROPERTIES IMPORTED_LOCATION ${ICU4C_LIB_DIR}/libicui18n.a)
add_library(icu4c_uc STATIC IMPORTED)
set_target_properties(icu4c_uc PROPERTIES IMPORTED_LOCATION ${ICU4C_LIB_DIR}/libicuuc.a)
add_library(icu4c_data STATIC IMPORTED)
set_target_properties(icu4c_data PROPERTIES IMPORTED_LOCATION ${ICU4C_LIB_DIR}/libicudata.a)

include_directories(${BOOST_INCLUDE_DIR})
add_library(boost_date_time STATIC IMPORTED)
set_target_properties(boost_date_time PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_date_time-mt.a)
add_library(boost_random STATIC IMPORTED)
set_target_properties(boost_random PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_random-mt.a)
add_library(boost_regex STATIC IMPORTED)
set_target_properties(boost_regex PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_regex-mt.a)
add_library(boost_chrono STATIC IMPORTED)
set_target_properties(boost_chrono PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_chrono-mt.a)
add_library(boost_atomic STATIC IMPORTED)
set_target_properties(boost_atomic PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_atomic-mt.a)
add_library(boost_log STATIC IMPORTED)
set_target_properties(boost_log PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_log-mt.a)
add_library(boost_log_setup STATIC IMPORTED)
set_target_properties(boost_log_setup PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_log_setup-mt.a)
add_library(boost_program_options STATIC IMPORTED)
set_target_properties(boost_program_options PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_program_options-mt.a)
add_library(boost_filesystem STATIC IMPORTED)
set_target_properties(boost_filesystem PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_filesystem-mt.a)
add_library(boost_system STATIC IMPORTED)
set_target_properties(boost_system PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_system-mt.a)
add_library(boost_thread STATIC IMPORTED)
set_target_properties(boost_thread PROPERTIES IMPORTED_LOCATION ${BOOST_LIB_DIR}/libboost_thread-mt.a)

add_library(ssl STATIC IMPORTED)
set_target_properties(ssl PROPERTIES IMPORTED_LOCATION ${OPENSSL_LIB_DIR}/libssl.a)
add_library(crypto STATIC IMPORTED)
set_target_properties(crypto PROPERTIES IMPORTED_LOCATION ${OPENSSL_LIB_DIR}/libcrypto.a)

add_library(cppnetlib-server-parsers STATIC IMPORTED)
set_target_properties(cppnetlib-server-parsers PROPERTIES IMPORTED_LOCATION ${CPP_NETLIB_LIB_DIR}/libcppnetlib-server-parsers.a)
add_library(cppnetlib-uri STATIC IMPORTED)
set_target_properties(cppnetlib-uri PROPERTIES IMPORTED_LOCATION ${CPP_NETLIB_LIB_DIR}/libcppnetlib-uri.a)

include_directories(${universals_INCLUDE_DIRS})

set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
set(BUILD_SHARED_LIBRARIES OFF)
if (WIN32)
  set(CMAKE_EXE_LINKER_FLAGS "-static")
else()
  set(CMAKE_EXE_LINKER_FLAGS "-static-libstdc++ -static-libgcc")
endif()
add_executable(align_server ${CC_FILES})

if (BUILD_IWYU)
  set_property(TARGET align_server PROPERTY CXX_INCLUDE_WHAT_YOU_USE ${iwyu})
endif()

if (WIN32)
  target_link_libraries(align_server align_server_app jwt_verify universals cppnetlib-server-parsers cppnetlib-uri ssl crypto boost_date_time boost_random boost_regex boost_chrono boost_atomic boost_log boost_log_setup boost_program_options boost_filesystem boost_system boost_thread icu4c_i18n icu4c_uc icu4c_data ${CMAKE_THREAD_LIBS_INIT} crypt32.lib ws2_32.lib wsock32.lib)
else()
  target_link_libraries(align_server align_server_app jwt_verify universals cppnetlib-server-parsers cppnetlib-uri ssl crypto boost_date_time boost_random boost_regex boost_chrono boost_atomic boost_log boost_log_setup boost_program_options boost_filesystem boost_system boost_thread icu4c_i18n icu4c_uc icu4c_data ${CMAKE_THREAD_LIBS_INIT} -ldl)
endif()
